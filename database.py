from sqlalchemy import create_engine, Column, Integer, String, DateTime, func, and_
from sqlalchemy.orm import Session, declarative_base

Base = declarative_base()


class HostsDataTable(Base):
    __tablename__ = 'hosts_data'
    id = Column(Integer, primary_key=True, autoincrement=True)
    host = Column(String(255))
    port = Column(Integer)
    username = Column(String(255))
    password = Column(String(255))
    last_update = Column(DateTime, server_default=func.now(), onupdate=func.now())

    def add_or_edit_data_to_base(self):
        expression = and_(HostsDataTable.host == self.host, HostsDataTable.port == self.port)
        host_from_base = base_session.query(HostsDataTable).filter(expression).first()
        print(host_from_base.host, host_from_base.username, host_from_base.password)
        if not host_from_base:
            base_session.add(self)
        elif host_from_base and self.username and self.password and not host_from_base.username and not host_from_base.password:
            host_from_base.username = self.username
            host_from_base.password = self.password
            print(host_from_base.host, host_from_base.username, host_from_base.password)
        elif host_from_base and self.username != host_from_base.username and self.password != host_from_base.password:
            base_session.add(self)


database_name = 'hosts.db'
engine = create_engine(f'sqlite:///{database_name}')
base_session = Session(engine)
